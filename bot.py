import asyncio
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from config import TELEGRAM_TOKEN
from scanner import find_signals

# üîÅ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
async def scheduled_scanner(app):
    while True:
        await find_signals(app.bot)
        await asyncio.sleep(300)

# üì≤ –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update, context):
    keyboard = [
        [InlineKeyboardButton("üî• –ù–∞–π—Ç–∏ —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞", callback_data="entry_point")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# üîò –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
async def button_handler(update, context):
    query = update.callback_query
    await query.answer()

    if query.data == "entry_point":
        await query.edit_message_text("‚è≥ –ò—â—É –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã...")
        await find_signals(context.bot, chat_id=query.message.chat_id)

# üß† –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    # –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    app.create_task(scheduled_scanner(app))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    await app.run_polling()

# –î–ª—è run_forever.py
def run_bot():
    asyncio.run(main())
